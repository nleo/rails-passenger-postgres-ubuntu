#!/usr/bin/env bash

APP_NAME=$1
DB_PASS=$2

# common setup
apt-get update && apt-get -y upgrade
ufw allow 22 && ufw allow 80 && ufw allow 443 && ufw --force enable
sed -i 's/#?PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config && service ssh restart

# setup for rails
apt-get --yes install software-properties-common apt-transport-https ca-certificates
apt-add-repository ppa:brightbox/ruby-ng -y
echo deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main > /etc/apt/sources.list.d/pgdg.list
echo deb https://oss-binaries.phusionpassenger.com/apt/passenger trusty main > /etc/apt/sources.list.d/passenger.list
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \
  sudo apt-key add -
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
apt-get update && apt-get install -y ruby2.2 ruby2.2-dev make patch nginx-extras passenger postgresql-server-dev-9.4 postgresql-9.4
echo 'gem: --no-document' > /etc/gemrc
gem install rails pg
sudo -u postgres template1 -c "CREATE USER $APP_NAME WITH PASSWORD '$DB_PASS'"
sudo -u postgres template1 -c "CREATE DATABASE $APP_NAME"
sudo -u postgres template1 -c "GRANT ALL PRIVILEGES ON DATABASE $APP_NAME to $APP_NAME"
adduser --disabled-password --gecos "" user
mkdir /home/user/.ssh
cp ~/.ssh/authorized_keys /home/user/.ssh
chown -R user:user /home/user/.ssh
echo 'user ALL=(ALL) NOPASSWD: bundle' >> /etc/sudoers
